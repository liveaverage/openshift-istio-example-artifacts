apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "17"
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"nifi-registry:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"nifi-registry\")].image"}]'
    openshift.io/generated-by: OpenShiftNewApp
  labels:
    app: nifi-registry
    app.kubernetes.io/component: nifi-registry
    app.kubernetes.io/instance: nifi-registry
  name: nifi-registry
  namespace: alpha-httpbin
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      deployment: nifi-registry
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
        sidecar.istio.io/inject: "true"
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
      creationTimestamp: null
      labels:
        deployment: nifi-registry
    spec:
      containers:
      - env:
        - name: AUTH
          value: tls
        - name: KEYSTORE_PATH
          value: /opt/nifi-registry/nifi-registry-current/conf/keystore.jks
        - name: KEYSTORE_TYPE
          value: jks
        - name: KEYSTORE_PASSWORD
          value: changeit
        - name: LOGBACK_LEVEL
          value: DEBUG
        - name: TRUSTSTORE_PATH
          value: /opt/nifi-registry/nifi-registry-current/conf/truststore.jks
        - name: TRUSTSTORE_PASSWORD
          value: changeit
        - name: TRUSTSTORE_TYPE
          value: jks
        - name: NIFI_REGISTRY_WEB_HTTPS_HOST
          value: 0.0.0.0
        image: apache/nifi-registry@sha256:9bcd32329c8c58d08d28abc133816a6db15772e55b0241d636c4ab7a111c7459
        imagePullPolicy: IfNotPresent
        name: nifi-registry
        ports:
        - containerPort: 18080
          name: http-18080
          protocol: TCP
        - containerPort: 18443
          name: https-18443
          protocol: TCP
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/nifi-registry/nifi-registry-current/conf
          name: nifi-reg-storage
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsGroup: 1000
        runAsUser: 1000
      serviceAccount: runasanyuid
      serviceAccountName: runasanyuid
      terminationGracePeriodSeconds: 30
      volumes:
      - name: nifi-reg-storage
        persistentVolumeClaim:
          claimName: nifi-reg-storage
